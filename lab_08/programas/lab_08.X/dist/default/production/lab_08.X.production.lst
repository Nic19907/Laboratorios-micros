

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 11:05:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0009                     _PORTE	set	9
   219  0001                     _TMR0	set	1
   220  0007                     _PORTC	set	7
   221  0008                     _PORTD	set	8
   222  000B                     _INTCONbits	set	11
   223  0005                     _PORTA	set	5
   224  001E                     _ADRESH	set	30
   225  000C                     _PIR1bits	set	12
   226  001F                     _ADCON0bits	set	31
   227  0081                     _OPTION_REGbits	set	129
   228  009F                     _ADCON1	set	159
   229  008C                     _PIE1bits	set	140
   230  008F                     _OSCCONbits	set	143
   231  0089                     _TRISE	set	137
   232  0088                     _TRISD	set	136
   233  0087                     _TRISC	set	135
   234  0085                     _TRISA	set	133
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           	psect	cinit
   239  0011                     start_initialization:	
   240                           ; #config settings
   241                           
   242  0011                     __initialization:
   243                           
   244                           ; Clear objects allocated to COMMON
   245  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248  0012  1283               	bcf	3,5	;RP0=0, select bank0
   249  0013  1303               	bcf	3,6	;RP1=0, select bank0
   250  0014  01B3               	clrf	__pbssBANK0& (0+127)
   251  0015  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   252  0016  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   253  0017  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   254  0018  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   255  0019  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   256  001A  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   257  001B  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   258  001C  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   259  001D                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  001D                     __end_of__initialization:
   263  001D  0183               	clrf	3
   264  001E  120A  118A  2894   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0078                     __pbssCOMMON:
   268  0078                     _transistor:
   269  0078                     	ds	1
   270                           
   271                           	psect	bssBANK0
   272  0033                     __pbssBANK0:
   273  0033                     _voltaje:
   274  0033                     	ds	2
   275  0035                     _pepa:
   276  0035                     	ds	1
   277  0036                     _display0:
   278  0036                     	ds	1
   279  0037                     _display1:
   280  0037                     	ds	1
   281  0038                     _display2:
   282  0038                     	ds	1
   283  0039                     _uni:
   284  0039                     	ds	1
   285  003A                     _dec:
   286  003A                     	ds	1
   287  003B                     _cen:
   288  003B                     	ds	1
   289                           
   290                           	psect	cstackCOMMON
   291  0070                     __pcstackCOMMON:
   292  0070                     ?_config_io:
   293  0070                     ?_config_clock:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_config_ie:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_config_ADC:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_config_tmr0:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_tabla_7seg:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_setup:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_isr:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ??_isr:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322  0070                     	ds	5
   323  0075                     ??_config_io:
   324  0075                     ??_config_clock:	
   325                           ; 1 bytes @ 0x5
   326                           
   327  0075                     ??_config_ie:	
   328                           ; 1 bytes @ 0x5
   329                           
   330  0075                     ??_config_ADC:	
   331                           ; 1 bytes @ 0x5
   332                           
   333  0075                     ??_config_tmr0:	
   334                           ; 1 bytes @ 0x5
   335                           
   336  0075                     ??_tabla_7seg:	
   337                           ; 1 bytes @ 0x5
   338                           
   339  0075                     ??___wmul:	
   340                           ; 1 bytes @ 0x5
   341                           
   342  0075                     ??___awdiv:	
   343                           ; 1 bytes @ 0x5
   344                           
   345  0075                     ??___awmod:	
   346                           ; 1 bytes @ 0x5
   347                           
   348  0075                     ??___lwmod:	
   349                           ; 1 bytes @ 0x5
   350                           
   351  0075                     ___wmul@product:	
   352                           ; 1 bytes @ 0x5
   353                           
   354                           
   355                           ; 2 bytes @ 0x5
   356  0075                     	ds	1
   357  0076                     ??_setup:
   358  0076                     ___awmod@counter:	
   359                           ; 1 bytes @ 0x6
   360                           
   361  0076                     ___lwmod@counter:	
   362                           ; 1 bytes @ 0x6
   363                           
   364                           
   365                           ; 1 bytes @ 0x6
   366  0076                     	ds	1
   367  0077                     ??___lwdiv:
   368  0077                     tabla_7seg@uwu:	
   369                           ; 1 bytes @ 0x7
   370                           
   371  0077                     ___awmod@sign:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           ; 1 bytes @ 0x7
   376  0077                     	ds	1
   377                           
   378                           	psect	cstackBANK0
   379  0020                     __pcstackBANK0:
   380  0020                     ?___wmul:
   381  0020                     ?___awdiv:	
   382                           ; 2 bytes @ 0x0
   383                           
   384  0020                     ?___awmod:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0020                     ?___lwmod:	
   388                           ; 2 bytes @ 0x0
   389                           
   390  0020                     ___wmul@multiplier:	
   391                           ; 2 bytes @ 0x0
   392                           
   393  0020                     ___awdiv@divisor:	
   394                           ; 2 bytes @ 0x0
   395                           
   396  0020                     ___awmod@divisor:	
   397                           ; 2 bytes @ 0x0
   398                           
   399  0020                     ___lwmod@divisor:	
   400                           ; 2 bytes @ 0x0
   401                           
   402                           
   403                           ; 2 bytes @ 0x0
   404  0020                     	ds	2
   405  0022                     ___wmul@multiplicand:
   406  0022                     ___awdiv@dividend:	
   407                           ; 2 bytes @ 0x2
   408                           
   409  0022                     ___awmod@dividend:	
   410                           ; 2 bytes @ 0x2
   411                           
   412  0022                     ___lwmod@dividend:	
   413                           ; 2 bytes @ 0x2
   414                           
   415                           
   416                           ; 2 bytes @ 0x2
   417  0022                     	ds	2
   418  0024                     ?___lwdiv:
   419  0024                     ___awdiv@counter:	
   420                           ; 2 bytes @ 0x4
   421                           
   422  0024                     ___lwdiv@divisor:	
   423                           ; 1 bytes @ 0x4
   424                           
   425                           
   426                           ; 2 bytes @ 0x4
   427  0024                     	ds	1
   428  0025                     ___awdiv@sign:
   429                           
   430                           ; 1 bytes @ 0x5
   431  0025                     	ds	1
   432  0026                     ___awdiv@quotient:
   433  0026                     ___lwdiv@dividend:	
   434                           ; 2 bytes @ 0x6
   435                           
   436                           
   437                           ; 2 bytes @ 0x6
   438  0026                     	ds	2
   439  0028                     ___lwdiv@counter:
   440                           
   441                           ; 1 bytes @ 0x8
   442  0028                     	ds	1
   443  0029                     ___lwdiv@quotient:
   444                           
   445                           ; 2 bytes @ 0x9
   446  0029                     	ds	2
   447  002B                     ?_divizion_m:
   448  002B                     divizion_m@kak:	
   449                           ; 1 bytes @ 0xB
   450                           
   451                           
   452                           ; 2 bytes @ 0xB
   453  002B                     	ds	2
   454  002D                     ??_divizion_m:
   455                           
   456                           ; 1 bytes @ 0xD
   457  002D                     	ds	3
   458  0030                     divizion_m@redivisor_m:
   459                           
   460                           ; 1 bytes @ 0x10
   461  0030                     	ds	1
   462  0031                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x11
   465  0031                     	ds	2
   466                           
   467                           	psect	maintext
   468  0094                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 91 in file "post_DAC.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0
   491 ;;      Totals:         0       2       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		_divizion_m
   496 ;;		_setup
   497 ;;		_tabla_7seg
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  0094                     _main:
   506  0094                     l1748:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   509                           
   510                           
   511                           ;post_DAC.c: 92: 
   512  0094  120A  118A  2314  120A  118A  	fcall	_setup
   513  0099                     l1750:
   514                           
   515                           ;post_DAC.c: 94: 
   516  0099  1283               	bcf	3,5	;RP0=0, select bank0
   517  009A  1303               	bcf	3,6	;RP1=0, select bank0
   518  009B  149F               	bsf	31,1	;volatile
   519  009C                     l1752:
   520                           
   521                           ;post_DAC.c: 97:         if (ADCON0bits.CHS == 6){
   522  009C  189F               	btfsc	31,1	;volatile
   523  009D  289F               	goto	u1191
   524  009E  28A0               	goto	u1190
   525  009F                     u1191:
   526  009F  28D7               	goto	l1778
   527  00A0                     u1190:
   528  00A0  28C5               	goto	l1776
   529  00A1                     l1756:
   530                           
   531                           ;post_DAC.c: 100:         }
   532  00A1  081F               	movf	31,w	;volatile
   533  00A2  39C3               	andlw	-61
   534  00A3  3814               	iorlw	20
   535  00A4  009F               	movwf	31	;volatile
   536  00A5                     l1758:
   537                           
   538                           ;post_DAC.c: 101:         else if (ADCON0bits.CHS == 5){
   539  00A5  300F               	movlw	15
   540  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   541  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   542  00A8  00B1               	movwf	??_main
   543  00A9                     u1207:
   544  00A9  0BB1               	decfsz	??_main,f
   545  00AA  28A9               	goto	u1207
   546  00AB  28AC               	nop2
   547  00AC                     l1760:
   548                           
   549                           ;post_DAC.c: 102:             PORTA = ADRESH;
   550  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   551  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   552  00AE  01B5               	clrf	_pepa
   553  00AF  0AB5               	incf	_pepa,f
   554                           
   555                           ;post_DAC.c: 103:         }
   556  00B0  28D5               	goto	l84
   557  00B1                     l1762:
   558                           
   559                           ;post_DAC.c: 105:     }
   560  00B1  081F               	movf	31,w	;volatile
   561  00B2  39C3               	andlw	-61
   562  00B3  3818               	iorlw	24
   563  00B4  009F               	movwf	31	;volatile
   564  00B5                     l1764:
   565                           
   566                           ;post_DAC.c: 106: 
   567  00B5  300F               	movlw	15
   568  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   569  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   570  00B8  00B1               	movwf	??_main
   571  00B9                     u1217:
   572  00B9  0BB1               	decfsz	??_main,f
   573  00BA  28B9               	goto	u1217
   574  00BB  28BC               	nop2
   575  00BC                     l1766:
   576                           
   577                           ;post_DAC.c: 107:     else if (INTCONbits.T0IF) {
   578  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   579  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   580  00BE  01B5               	clrf	_pepa
   581                           
   582                           ;post_DAC.c: 108:         INTCONbits.T0IF = 0;
   583  00BF  28D5               	goto	l84
   584  00C0                     l1768:
   585                           
   586                           ;post_DAC.c: 110:         switch (transistor){
   587  00C0  081F               	movf	31,w	;volatile
   588  00C1  39C3               	andlw	-61
   589  00C2  3814               	iorlw	20
   590  00C3  009F               	movwf	31	;volatile
   591  00C4  28A5               	goto	l1758
   592  00C5                     l1776:
   593  00C5  0835               	movf	_pepa,w
   594  00C6  00B1               	movwf	??_main
   595  00C7  01B2               	clrf	??_main+1
   596                           
   597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   598                           ; Switch size 1, requested type "simple"
   599                           ; Number of cases is 1, Range of values is 0 to 0
   600                           ; switch strategies available:
   601                           ; Name         Instructions Cycles
   602                           ; simple_byte            4     3 (average)
   603                           ; direct_byte           11     8 (fixed)
   604                           ; jumptable            260     6 (fixed)
   605                           ;	Chosen strategy is simple_byte
   606  00C8  0832               	movf	??_main+1,w
   607  00C9  3A00               	xorlw	0	; case 0
   608  00CA  1903               	skipnz
   609  00CB  28CD               	goto	l1860
   610  00CC  28C0               	goto	l1768
   611  00CD                     l1860:
   612                           
   613                           ; Switch size 1, requested type "simple"
   614                           ; Number of cases is 2, Range of values is 0 to 1
   615                           ; switch strategies available:
   616                           ; Name         Instructions Cycles
   617                           ; simple_byte            7     4 (average)
   618                           ; direct_byte           14     8 (fixed)
   619                           ; jumptable            260     6 (fixed)
   620                           ;	Chosen strategy is simple_byte
   621  00CD  0831               	movf	??_main,w
   622  00CE  3A00               	xorlw	0	; case 0
   623  00CF  1903               	skipnz
   624  00D0  28A1               	goto	l1756
   625  00D1  3A01               	xorlw	1	; case 1
   626  00D2  1903               	skipnz
   627  00D3  28B1               	goto	l1762
   628  00D4  28C0               	goto	l1768
   629  00D5                     l84:
   630                           
   631                           ;post_DAC.c: 116:                 break;
   632  00D5  149F               	bsf	31,1	;volatile
   633                           
   634                           ;post_DAC.c: 117:             case 1:
   635  00D6  130C               	bcf	12,6	;volatile
   636  00D7                     l1778:
   637                           
   638                           ;post_DAC.c: 119:                 PORTC = display1;
   639  00D7  0834               	movf	_voltaje+1,w
   640  00D8  00AC               	movwf	divizion_m@kak+1
   641  00D9  0833               	movf	_voltaje,w
   642  00DA  00AB               	movwf	divizion_m@kak
   643  00DB  120A  118A  2021  120A  118A  	fcall	_divizion_m
   644  00E0                     l1780:
   645                           
   646                           ;post_DAC.c: 121:                 PORTD = 0b010;
   647  00E0  3000               	movlw	0
   648  00E1  120A  118A  2272  120A  118A  	fcall	_tabla_7seg
   649  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   650  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   651  00E8  00B1               	movwf	??_main
   652  00E9  0831               	movf	??_main,w
   653  00EA  00B8               	movwf	_display2
   654  00EB                     l1782:
   655                           
   656                           ;post_DAC.c: 122:                 break;
   657  00EB  083A               	movf	_dec,w
   658  00EC  120A  118A  2272  120A  118A  	fcall	_tabla_7seg
   659  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   660  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   661  00F3  00B1               	movwf	??_main
   662  00F4  0831               	movf	??_main,w
   663  00F5  00B7               	movwf	_display1
   664  00F6                     l1784:
   665                           
   666                           ;post_DAC.c: 123:             case 2:
   667  00F6  0839               	movf	_uni,w
   668  00F7  120A  118A  2272  120A  118A  	fcall	_tabla_7seg
   669  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   670  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   671  00FE  00B1               	movwf	??_main
   672  00FF  0831               	movf	??_main,w
   673  0100  00B6               	movwf	_display0
   674  0101  289C               	goto	l1752
   675  0102  120A  118A  280E   	ljmp	start
   676  0105                     __end_of_main:
   677                           
   678                           	psect	text1
   679  0272                     __ptext1:	
   680 ;; *************** function _tabla_7seg *****************
   681 ;; Defined at:
   682 ;;		line 259 in file "post_DAC.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  uwu             1    wreg     unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  uwu             1    7[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      unsigned char 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0
   698 ;;      Temps:          2       0       0       0       0
   699 ;;      Totals:         3       0       0       0       0
   700 ;;Total ram usage:        3 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _tabla_7seg
   712  0272                     _tabla_7seg:
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _tabla_7seg: [wreg-fsr0h+status,2+status,0]
   716                           ;tabla_7seg@uwu stored from wreg
   717  0272  00F7               	movwf	tabla_7seg@uwu
   718  0273                     l1372:
   719  0273  2A88               	goto	l1442
   720  0274                     l1374:
   721  0274  303F               	movlw	63
   722  0275  2AB0               	goto	l129
   723  0276                     l1380:
   724  0276  3006               	movlw	6
   725  0277  2AB0               	goto	l129
   726  0278                     l1386:
   727  0278  305B               	movlw	91
   728  0279  2AB0               	goto	l129
   729  027A                     l1392:
   730  027A  304F               	movlw	79
   731  027B  2AB0               	goto	l129
   732  027C                     l1398:
   733  027C  3066               	movlw	102
   734  027D  2AB0               	goto	l129
   735  027E                     l1404:
   736  027E  306D               	movlw	109
   737  027F  2AB0               	goto	l129
   738  0280                     l1410:
   739  0280  307D               	movlw	125
   740  0281  2AB0               	goto	l129
   741  0282                     l1416:
   742  0282  3007               	movlw	7
   743  0283  2AB0               	goto	l129
   744  0284                     l1422:
   745  0284  307F               	movlw	127
   746  0285  2AB0               	goto	l129
   747  0286                     l1428:
   748  0286  3067               	movlw	103
   749  0287  2AB0               	goto	l129
   750  0288                     l1442:
   751  0288  0877               	movf	tabla_7seg@uwu,w
   752  0289  00F5               	movwf	??_tabla_7seg
   753  028A  01F6               	clrf	??_tabla_7seg+1
   754                           
   755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   756                           ; Switch size 1, requested type "simple"
   757                           ; Number of cases is 1, Range of values is 0 to 0
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte            4     3 (average)
   761                           ; direct_byte           11     8 (fixed)
   762                           ; jumptable            260     6 (fixed)
   763                           ;	Chosen strategy is simple_byte
   764  028B  0876               	movf	??_tabla_7seg+1,w
   765  028C  3A00               	xorlw	0	; case 0
   766  028D  1903               	skipnz
   767  028E  2A90               	goto	l1862
   768  028F  2A74               	goto	l1374
   769  0290                     l1862:
   770                           
   771                           ; Switch size 1, requested type "simple"
   772                           ; Number of cases is 10, Range of values is 0 to 9
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; simple_byte           31    16 (average)
   776                           ; direct_byte           38     8 (fixed)
   777                           ; jumptable            260     6 (fixed)
   778                           ;	Chosen strategy is simple_byte
   779  0290  0875               	movf	??_tabla_7seg,w
   780  0291  3A00               	xorlw	0	; case 0
   781  0292  1903               	skipnz
   782  0293  2A74               	goto	l1374
   783  0294  3A01               	xorlw	1	; case 1
   784  0295  1903               	skipnz
   785  0296  2A76               	goto	l1380
   786  0297  3A03               	xorlw	3	; case 2
   787  0298  1903               	skipnz
   788  0299  2A78               	goto	l1386
   789  029A  3A01               	xorlw	1	; case 3
   790  029B  1903               	skipnz
   791  029C  2A7A               	goto	l1392
   792  029D  3A07               	xorlw	7	; case 4
   793  029E  1903               	skipnz
   794  029F  2A7C               	goto	l1398
   795  02A0  3A01               	xorlw	1	; case 5
   796  02A1  1903               	skipnz
   797  02A2  2A7E               	goto	l1404
   798  02A3  3A03               	xorlw	3	; case 6
   799  02A4  1903               	skipnz
   800  02A5  2A80               	goto	l1410
   801  02A6  3A01               	xorlw	1	; case 7
   802  02A7  1903               	skipnz
   803  02A8  2A82               	goto	l1416
   804  02A9  3A0F               	xorlw	15	; case 8
   805  02AA  1903               	skipnz
   806  02AB  2A84               	goto	l1422
   807  02AC  3A01               	xorlw	1	; case 9
   808  02AD  1903               	skipnz
   809  02AE  2A86               	goto	l1428
   810  02AF  2A74               	goto	l1374
   811  02B0                     l129:
   812  02B0  0008               	return
   813  02B1                     __end_of_tabla_7seg:
   814                           
   815                           	psect	text2
   816  0314                     __ptext2:	
   817 ;; *************** function _setup *****************
   818 ;; Defined at:
   819 ;;		line 69 in file "post_DAC.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, pclath, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 2
   840 ;; This function calls:
   841 ;;		_config_ADC
   842 ;;		_config_clock
   843 ;;		_config_ie
   844 ;;		_config_io
   845 ;;		_config_tmr0
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _setup
   853  0314                     _setup:
   854  0314                     l1358:	
   855                           ;incstack = 0
   856                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   857                           
   858                           
   859                           ;post_DAC.c: 70:                 default:
   860  0314  120A  118A  2342  120A  118A  	fcall	_config_io
   861                           
   862                           ;post_DAC.c: 71:                     ADCON0bits.CHS = 5;
   863  0319  120A  118A  236E  120A  118A  	fcall	_config_clock
   864  031E                     l1360:
   865                           
   866                           ;post_DAC.c: 72:                     _delay((unsigned long)((50)*(4000000/4000000.0)));
   867  031E  120A  118A  2363  120A  118A  	fcall	_config_ie
   868  0323                     l1362:
   869                           
   870                           ;post_DAC.c: 73:                     pepa = 1;
   871  0323  120A  118A  232E  120A  118A  	fcall	_config_ADC
   872  0328                     l1364:
   873                           
   874                           ;post_DAC.c: 74:                     break;
   875  0328  120A  118A  2355  120A  118A  	fcall	_config_tmr0
   876  032D                     l75:
   877  032D  0008               	return
   878  032E                     __end_of_setup:
   879                           
   880                           	psect	text3
   881  0355                     __ptext3:	
   882 ;; *************** function _config_tmr0 *****************
   883 ;; Defined at:
   884 ;;		line 230 in file "post_DAC.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_setup
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _config_tmr0
   914  0355                     _config_tmr0:
   915  0355                     l1206:	
   916                           ;incstack = 0
   917                           ; Regs used in _config_tmr0: [wreg+status,2+status,0]
   918                           
   919                           
   920                           ;post_DAC.c: 231:             return 0b01011011;
   921  0355  1683               	bsf	3,5	;RP0=1, select bank1
   922  0356  1303               	bcf	3,6	;RP1=0, select bank1
   923  0357  1281               	bcf	1,5	;volatile
   924                           
   925                           ;post_DAC.c: 232:             break;
   926  0358  1201               	bcf	1,4	;volatile
   927                           
   928                           ;post_DAC.c: 233:         case 3:
   929  0359  1181               	bcf	1,3	;volatile
   930  035A                     l1208:
   931                           
   932                           ;post_DAC.c: 234:             return 0b01001111;
   933  035A  0801               	movf	1,w	;volatile
   934  035B  39F8               	andlw	-8
   935  035C  3803               	iorlw	3
   936  035D  0081               	movwf	1	;volatile
   937  035E                     l1210:
   938                           
   939                           ;post_DAC.c: 235:             break;
   940  035E  3083               	movlw	131
   941  035F  1283               	bcf	3,5	;RP0=0, select bank0
   942  0360  1303               	bcf	3,6	;RP1=0, select bank0
   943  0361  0081               	movwf	1	;volatile
   944  0362                     l121:
   945  0362  0008               	return
   946  0363                     __end_of_config_tmr0:
   947                           
   948                           	psect	text4
   949  0342                     __ptext4:	
   950 ;; *************** function _config_io *****************
   951 ;; Defined at:
   952 ;;		line 185 in file "post_DAC.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_setup
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _config_io
   982  0342                     _config_io:
   983  0342                     l1166:	
   984                           ;incstack = 0
   985                           ; Regs used in _config_io: [wreg+status,2]
   986                           
   987                           
   988                           ;post_DAC.c: 186:     ADCON0bits.CHS = 5;
   989  0342  3060               	movlw	96
   990  0343  1683               	bsf	3,5	;RP0=1, select bank3
   991  0344  1703               	bsf	3,6	;RP1=1, select bank3
   992  0345  0088               	movwf	8	;volatile
   993  0346                     l1168:
   994                           
   995                           ;post_DAC.c: 187:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   996  0346  0189               	clrf	9	;volatile
   997  0347                     l1170:
   998                           
   999                           ;post_DAC.c: 189: }
  1000  0347  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0348  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0349  0185               	clrf	5	;volatile
  1003  034A                     l1172:
  1004                           
  1005                           ;post_DAC.c: 190: 
  1006  034A  0187               	clrf	7	;volatile
  1007  034B                     l1174:
  1008                           
  1009                           ;post_DAC.c: 191: void config_tmr0(void){
  1010  034B  0188               	clrf	8	;volatile
  1011                           
  1012                           ;post_DAC.c: 192:     OPTION_REGbits.T0CS = 0;
  1013  034C  3003               	movlw	3
  1014  034D  0089               	movwf	9	;volatile
  1015  034E                     l1176:
  1016                           
  1017                           ;post_DAC.c: 194:     OPTION_REGbits.PSA = 0;
  1018  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1019  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0350  0185               	clrf	5	;volatile
  1021  0351                     l1178:
  1022                           
  1023                           ;post_DAC.c: 195:     OPTION_REGbits.PS = 0b011;
  1024  0351  0187               	clrf	7	;volatile
  1025  0352                     l1180:
  1026                           
  1027                           ;post_DAC.c: 196:     TMR0 = 131;
  1028  0352  0188               	clrf	8	;volatile
  1029  0353                     l1182:
  1030                           
  1031                           ;post_DAC.c: 197:     return;
  1032  0353  0189               	clrf	9	;volatile
  1033  0354                     l109:
  1034  0354  0008               	return
  1035  0355                     __end_of_config_io:
  1036                           
  1037                           	psect	text5
  1038  0363                     __ptext5:	
  1039 ;; *************** function _config_ie *****************
  1040 ;; Defined at:
  1041 ;;		line 207 in file "post_DAC.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		None
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_setup
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _config_ie
  1071  0363                     _config_ie:
  1072  0363                     l1192:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _config_ie: []
  1075                           
  1076                           
  1077                           ;post_DAC.c: 208: 
  1078  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0365  130C               	bcf	12,6	;volatile
  1081                           
  1082                           ;post_DAC.c: 209:     int cen = (int) kak/100;
  1083  0366  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0367  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0368  170C               	bsf	12,6	;volatile
  1086                           
  1087                           ;post_DAC.c: 211:     dec = redivisor_m/10;
  1088  0369  178B               	bsf	11,7	;volatile
  1089                           
  1090                           ;post_DAC.c: 212:     uni = redivisor_m%10;
  1091  036A  170B               	bsf	11,6	;volatile
  1092                           
  1093                           ;post_DAC.c: 213:     return;
  1094  036B  168B               	bsf	11,5	;volatile
  1095                           
  1096                           ;post_DAC.c: 214: }
  1097  036C  110B               	bcf	11,2	;volatile
  1098  036D                     l115:	
  1099                           ;post_DAC.c: 217: 
  1100                           
  1101  036D  0008               	return
  1102  036E                     __end_of_config_ie:
  1103                           
  1104                           	psect	text6
  1105  036E                     __ptext6:	
  1106 ;; *************** function _config_clock *****************
  1107 ;; Defined at:
  1108 ;;		line 201 in file "post_DAC.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_setup
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _config_clock
  1138  036E                     _config_clock:
  1139  036E                     l1186:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  1142                           
  1143                           
  1144                           ;post_DAC.c: 202: 
  1145  036E  1683               	bsf	3,5	;RP0=1, select bank1
  1146  036F  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0370  080F               	movf	15,w	;volatile
  1148  0371  398F               	andlw	-113
  1149  0372  3860               	iorlw	96
  1150  0373  008F               	movwf	15	;volatile
  1151  0374                     l1188:
  1152                           
  1153                           ;post_DAC.c: 203: 
  1154  0374  140F               	bsf	15,0	;volatile
  1155  0375                     l112:
  1156  0375  0008               	return
  1157  0376                     __end_of_config_clock:
  1158                           
  1159                           	psect	text7
  1160  032E                     __ptext7:	
  1161 ;; *************** function _config_ADC *****************
  1162 ;; Defined at:
  1163 ;;		line 220 in file "post_DAC.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          1       0       0       0       0
  1180 ;;      Totals:         1       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_setup
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _config_ADC
  1193  032E                     _config_ADC:
  1194  032E                     l1194:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1197                           
  1198                           
  1199                           ;post_DAC.c: 221: {
  1200  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1201  032F  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0330  019F               	clrf	31	;volatile
  1203  0331                     l1196:
  1204                           
  1205                           ;post_DAC.c: 223:     {
  1206  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0333  081F               	movf	31,w	;volatile
  1209  0334  393F               	andlw	-193
  1210  0335  3840               	iorlw	64
  1211  0336  009F               	movwf	31	;volatile
  1212  0337                     l1198:
  1213                           
  1214                           ;post_DAC.c: 224:         case 0:
  1215  0337  141F               	bsf	31,0	;volatile
  1216  0338                     l1200:
  1217                           
  1218                           ;post_DAC.c: 225:             return 0b00111111;
  1219  0338  081F               	movf	31,w	;volatile
  1220  0339  39C3               	andlw	-61
  1221  033A  3814               	iorlw	20
  1222  033B  009F               	movwf	31	;volatile
  1223  033C                     l1202:
  1224                           
  1225                           ;post_DAC.c: 226:             break;
  1226  033C  3010               	movlw	16
  1227  033D  00F5               	movwf	??_config_ADC
  1228  033E                     u1227:
  1229  033E  0BF5               	decfsz	??_config_ADC,f
  1230  033F  2B3E               	goto	u1227
  1231  0340  0000               	nop
  1232  0341                     l118:
  1233  0341  0008               	return
  1234  0342                     __end_of_config_ADC:
  1235                           
  1236                           	psect	text8
  1237  0021                     __ptext8:	
  1238 ;; *************** function _divizion_m *****************
  1239 ;; Defined at:
  1240 ;;		line 244 in file "post_DAC.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  kak             2   11[BANK0 ] unsigned int 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  cen             2    0        int 
  1245 ;;  redivisor_m     1   16[BANK0 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1255 ;;      Params:         0       2       0       0       0
  1256 ;;      Locals:         0       1       0       0       0
  1257 ;;      Temps:          0       3       0       0       0
  1258 ;;      Totals:         0       6       0       0       0
  1259 ;;Total ram usage:        6 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 2
  1262 ;; This function calls:
  1263 ;;		___awdiv
  1264 ;;		___awmod
  1265 ;;		___lwdiv
  1266 ;;		___lwmod
  1267 ;;		___wmul
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           
  1274                           ;psect for function _divizion_m
  1275  0021                     _divizion_m:
  1276  0021                     l1744:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _divizion_m: [wreg+status,2+status,0+pclath+cstack]
  1279                           
  1280                           
  1281                           ;post_DAC.c: 245:         case 7:;post_DAC.c: 246:             return 0b00000111;
  1282  0021  3033               	movlw	51
  1283  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0024  00A4               	movwf	___lwdiv@divisor
  1286  0025  3000               	movlw	0
  1287  0026  00A5               	movwf	___lwdiv@divisor+1
  1288  0027  082C               	movf	divizion_m@kak+1,w
  1289  0028  00A1               	movwf	___wmul@multiplier+1
  1290  0029  082B               	movf	divizion_m@kak,w
  1291  002A  00A0               	movwf	___wmul@multiplier
  1292  002B  3064               	movlw	100
  1293  002C  00A2               	movwf	___wmul@multiplicand
  1294  002D  3000               	movlw	0
  1295  002E  00A3               	movwf	___wmul@multiplicand+1
  1296  002F  120A  118A  22ED  120A  118A  	fcall	___wmul
  1297  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0036  0821               	movf	?___wmul+1,w
  1300  0037  00A7               	movwf	___lwdiv@dividend+1
  1301  0038  0820               	movf	?___wmul,w
  1302  0039  00A6               	movwf	___lwdiv@dividend
  1303  003A  120A  118A  222C  120A  118A  	fcall	___lwdiv
  1304  003F  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0040  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0041  0825               	movf	?___lwdiv+1,w
  1307  0042  00AC               	movwf	divizion_m@kak+1
  1308  0043  0824               	movf	?___lwdiv,w
  1309  0044  00AB               	movwf	divizion_m@kak
  1310  0045  3064               	movlw	100
  1311  0046  00A0               	movwf	___awdiv@divisor
  1312  0047  3000               	movlw	0
  1313  0048  00A1               	movwf	___awdiv@divisor+1
  1314  0049  082C               	movf	divizion_m@kak+1,w
  1315  004A  00A3               	movwf	___awdiv@dividend+1
  1316  004B  082B               	movf	divizion_m@kak,w
  1317  004C  00A2               	movwf	___awdiv@dividend
  1318  004D  120A  118A  2105  120A  118A  	fcall	___awdiv
  1319                           
  1320                           ;post_DAC.c: 249:             return 0b01111111;
  1321  0052  3064               	movlw	100
  1322  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0055  00A0               	movwf	___lwmod@divisor
  1325  0056  3000               	movlw	0
  1326  0057  00A1               	movwf	___lwmod@divisor+1
  1327  0058  082C               	movf	divizion_m@kak+1,w
  1328  0059  00A3               	movwf	___lwmod@dividend+1
  1329  005A  082B               	movf	divizion_m@kak,w
  1330  005B  00A2               	movwf	___lwmod@dividend
  1331  005C  120A  118A  22B1  120A  118A  	fcall	___lwmod
  1332  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0063  0820               	movf	?___lwmod,w
  1335  0064  00AD               	movwf	??_divizion_m
  1336  0065  082D               	movf	??_divizion_m,w
  1337  0066  00B0               	movwf	divizion_m@redivisor_m
  1338                           
  1339                           ;post_DAC.c: 250:             break;
  1340  0067  300A               	movlw	10
  1341  0068  00A0               	movwf	___awdiv@divisor
  1342  0069  3000               	movlw	0
  1343  006A  00A1               	movwf	___awdiv@divisor+1
  1344  006B  0830               	movf	divizion_m@redivisor_m,w
  1345  006C  00AD               	movwf	??_divizion_m
  1346  006D  01AE               	clrf	??_divizion_m+1
  1347  006E  082D               	movf	??_divizion_m,w
  1348  006F  00A2               	movwf	___awdiv@dividend
  1349  0070  082E               	movf	??_divizion_m+1,w
  1350  0071  00A3               	movwf	___awdiv@dividend+1
  1351  0072  120A  118A  2105  120A  118A  	fcall	___awdiv
  1352  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0079  0820               	movf	?___awdiv,w
  1355  007A  00AF               	movwf	??_divizion_m+2
  1356  007B  082F               	movf	??_divizion_m+2,w
  1357  007C  00BA               	movwf	_dec
  1358                           
  1359                           ;post_DAC.c: 251:         case 9:
  1360  007D  300A               	movlw	10
  1361  007E  00A0               	movwf	___awmod@divisor
  1362  007F  3000               	movlw	0
  1363  0080  00A1               	movwf	___awmod@divisor+1
  1364  0081  0830               	movf	divizion_m@redivisor_m,w
  1365  0082  00AD               	movwf	??_divizion_m
  1366  0083  01AE               	clrf	??_divizion_m+1
  1367  0084  082D               	movf	??_divizion_m,w
  1368  0085  00A2               	movwf	___awmod@dividend
  1369  0086  082E               	movf	??_divizion_m+1,w
  1370  0087  00A3               	movwf	___awmod@dividend+1
  1371  0088  120A  118A  21D1  120A  118A  	fcall	___awmod
  1372  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1373  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1374  008F  0820               	movf	?___awmod,w
  1375  0090  00AF               	movwf	??_divizion_m+2
  1376  0091  082F               	movf	??_divizion_m+2,w
  1377  0092  00B9               	movwf	_uni
  1378  0093                     l124:
  1379  0093  0008               	return
  1380  0094                     __end_of_divizion_m:
  1381                           
  1382                           	psect	text9
  1383  02ED                     __ptext9:	
  1384 ;; *************** function ___wmul *****************
  1385 ;; Defined at:
  1386 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1389 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  product         2    5[COMMON] unsigned int 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  2    0[BANK0 ] unsigned int 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       4       0       0       0
  1402 ;;      Locals:         2       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0
  1404 ;;      Totals:         2       4       0       0       0
  1405 ;;Total ram usage:        6 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 1
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_divizion_m
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function ___wmul
  1417  02ED                     ___wmul:
  1418  02ED                     l1600:	
  1419                           ;incstack = 0
  1420                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1421                           
  1422  02ED  01F5               	clrf	___wmul@product
  1423  02EE  01F6               	clrf	___wmul@product+1
  1424  02EF                     l1602:
  1425  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1426  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1427  02F1  1C20               	btfss	___wmul@multiplier,0
  1428  02F2  2AF4               	goto	u831
  1429  02F3  2AF5               	goto	u830
  1430  02F4                     u831:
  1431  02F4  2AFB               	goto	l226
  1432  02F5                     u830:
  1433  02F5                     l1604:
  1434  02F5  0822               	movf	___wmul@multiplicand,w
  1435  02F6  07F5               	addwf	___wmul@product,f
  1436  02F7  1803               	skipnc
  1437  02F8  0AF6               	incf	___wmul@product+1,f
  1438  02F9  0823               	movf	___wmul@multiplicand+1,w
  1439  02FA  07F6               	addwf	___wmul@product+1,f
  1440  02FB                     l226:
  1441  02FB  3001               	movlw	1
  1442  02FC                     u845:
  1443  02FC  1003               	clrc
  1444  02FD  0DA2               	rlf	___wmul@multiplicand,f
  1445  02FE  0DA3               	rlf	___wmul@multiplicand+1,f
  1446  02FF  3EFF               	addlw	-1
  1447  0300  1D03               	skipz
  1448  0301  2AFC               	goto	u845
  1449  0302                     l1606:
  1450  0302  3001               	movlw	1
  1451  0303                     u855:
  1452  0303  1003               	clrc
  1453  0304  0CA1               	rrf	___wmul@multiplier+1,f
  1454  0305  0CA0               	rrf	___wmul@multiplier,f
  1455  0306  3EFF               	addlw	-1
  1456  0307  1D03               	skipz
  1457  0308  2B03               	goto	u855
  1458  0309                     l1608:
  1459  0309  0820               	movf	___wmul@multiplier,w
  1460  030A  0421               	iorwf	___wmul@multiplier+1,w
  1461  030B  1D03               	btfss	3,2
  1462  030C  2B0E               	goto	u861
  1463  030D  2B0F               	goto	u860
  1464  030E                     u861:
  1465  030E  2AEF               	goto	l1602
  1466  030F                     u860:
  1467  030F                     l1610:
  1468  030F  0876               	movf	___wmul@product+1,w
  1469  0310  00A1               	movwf	?___wmul+1
  1470  0311  0875               	movf	___wmul@product,w
  1471  0312  00A0               	movwf	?___wmul
  1472  0313                     l228:
  1473  0313  0008               	return
  1474  0314                     __end_of___wmul:
  1475                           
  1476                           	psect	text10
  1477  02B1                     __ptext10:	
  1478 ;; *************** function ___lwmod *****************
  1479 ;; Defined at:
  1480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  divisor         2    0[BANK0 ] unsigned int 
  1483 ;;  dividend        2    2[BANK0 ] unsigned int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  counter         1    6[COMMON] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[BANK0 ] unsigned int 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         0       4       0       0       0
  1496 ;;      Locals:         1       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0
  1498 ;;      Totals:         2       4       0       0       0
  1499 ;;Total ram usage:        6 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_divizion_m
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function ___lwmod
  1511  02B1                     ___lwmod:
  1512  02B1                     l1722:	
  1513                           ;incstack = 0
  1514                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1515                           
  1516  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1517  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1518  02B3  0820               	movf	___lwmod@divisor,w
  1519  02B4  0421               	iorwf	___lwmod@divisor+1,w
  1520  02B5  1903               	btfsc	3,2
  1521  02B6  2AB8               	goto	u1131
  1522  02B7  2AB9               	goto	u1130
  1523  02B8                     u1131:
  1524  02B8  2AE8               	goto	l1740
  1525  02B9                     u1130:
  1526  02B9                     l1724:
  1527  02B9  01F6               	clrf	___lwmod@counter
  1528  02BA  0AF6               	incf	___lwmod@counter,f
  1529  02BB  2AC7               	goto	l1730
  1530  02BC                     l1726:
  1531  02BC  3001               	movlw	1
  1532  02BD                     u1145:
  1533  02BD  1003               	clrc
  1534  02BE  0DA0               	rlf	___lwmod@divisor,f
  1535  02BF  0DA1               	rlf	___lwmod@divisor+1,f
  1536  02C0  3EFF               	addlw	-1
  1537  02C1  1D03               	skipz
  1538  02C2  2ABD               	goto	u1145
  1539  02C3                     l1728:
  1540  02C3  3001               	movlw	1
  1541  02C4  00F5               	movwf	??___lwmod
  1542  02C5  0875               	movf	??___lwmod,w
  1543  02C6  07F6               	addwf	___lwmod@counter,f
  1544  02C7                     l1730:
  1545  02C7  1FA1               	btfss	___lwmod@divisor+1,7
  1546  02C8  2ACA               	goto	u1151
  1547  02C9  2ACB               	goto	u1150
  1548  02CA                     u1151:
  1549  02CA  2ABC               	goto	l1726
  1550  02CB                     u1150:
  1551  02CB                     l1732:
  1552  02CB  0821               	movf	___lwmod@divisor+1,w
  1553  02CC  0223               	subwf	___lwmod@dividend+1,w
  1554  02CD  1D03               	skipz
  1555  02CE  2AD1               	goto	u1165
  1556  02CF  0820               	movf	___lwmod@divisor,w
  1557  02D0  0222               	subwf	___lwmod@dividend,w
  1558  02D1                     u1165:
  1559  02D1  1C03               	skipc
  1560  02D2  2AD4               	goto	u1161
  1561  02D3  2AD5               	goto	u1160
  1562  02D4                     u1161:
  1563  02D4  2ADB               	goto	l1736
  1564  02D5                     u1160:
  1565  02D5                     l1734:
  1566  02D5  0820               	movf	___lwmod@divisor,w
  1567  02D6  02A2               	subwf	___lwmod@dividend,f
  1568  02D7  0821               	movf	___lwmod@divisor+1,w
  1569  02D8  1C03               	skipc
  1570  02D9  03A3               	decf	___lwmod@dividend+1,f
  1571  02DA  02A3               	subwf	___lwmod@dividend+1,f
  1572  02DB                     l1736:
  1573  02DB  3001               	movlw	1
  1574  02DC                     u1175:
  1575  02DC  1003               	clrc
  1576  02DD  0CA1               	rrf	___lwmod@divisor+1,f
  1577  02DE  0CA0               	rrf	___lwmod@divisor,f
  1578  02DF  3EFF               	addlw	-1
  1579  02E0  1D03               	skipz
  1580  02E1  2ADC               	goto	u1175
  1581  02E2                     l1738:
  1582  02E2  3001               	movlw	1
  1583  02E3  02F6               	subwf	___lwmod@counter,f
  1584  02E4  1D03               	btfss	3,2
  1585  02E5  2AE7               	goto	u1181
  1586  02E6  2AE8               	goto	u1180
  1587  02E7                     u1181:
  1588  02E7  2ACB               	goto	l1732
  1589  02E8                     u1180:
  1590  02E8                     l1740:
  1591  02E8  0823               	movf	___lwmod@dividend+1,w
  1592  02E9  00A1               	movwf	?___lwmod+1
  1593  02EA  0822               	movf	___lwmod@dividend,w
  1594  02EB  00A0               	movwf	?___lwmod
  1595  02EC                     l508:
  1596  02EC  0008               	return
  1597  02ED                     __end_of___lwmod:
  1598                           
  1599                           	psect	text11
  1600  022C                     __ptext11:	
  1601 ;; *************** function ___lwdiv *****************
  1602 ;; Defined at:
  1603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  divisor         2    4[BANK0 ] unsigned int 
  1606 ;;  dividend        2    6[BANK0 ] unsigned int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  quotient        2    9[BANK0 ] unsigned int 
  1609 ;;  counter         1    8[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2    4[BANK0 ] unsigned int 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       4       0       0       0
  1620 ;;      Locals:         0       3       0       0       0
  1621 ;;      Temps:          1       0       0       0       0
  1622 ;;      Totals:         1       7       0       0       0
  1623 ;;Total ram usage:        8 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_divizion_m
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function ___lwdiv
  1635  022C                     ___lwdiv:
  1636  022C                     l1696:	
  1637                           ;incstack = 0
  1638                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1639                           
  1640  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1641  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1642  022E  01A9               	clrf	___lwdiv@quotient
  1643  022F  01AA               	clrf	___lwdiv@quotient+1
  1644  0230                     l1698:
  1645  0230  0824               	movf	___lwdiv@divisor,w
  1646  0231  0425               	iorwf	___lwdiv@divisor+1,w
  1647  0232  1903               	btfsc	3,2
  1648  0233  2A35               	goto	u1061
  1649  0234  2A36               	goto	u1060
  1650  0235                     u1061:
  1651  0235  2A6D               	goto	l1718
  1652  0236                     u1060:
  1653  0236                     l1700:
  1654  0236  01A8               	clrf	___lwdiv@counter
  1655  0237  0AA8               	incf	___lwdiv@counter,f
  1656  0238  2A44               	goto	l1706
  1657  0239                     l1702:
  1658  0239  3001               	movlw	1
  1659  023A                     u1075:
  1660  023A  1003               	clrc
  1661  023B  0DA4               	rlf	___lwdiv@divisor,f
  1662  023C  0DA5               	rlf	___lwdiv@divisor+1,f
  1663  023D  3EFF               	addlw	-1
  1664  023E  1D03               	skipz
  1665  023F  2A3A               	goto	u1075
  1666  0240                     l1704:
  1667  0240  3001               	movlw	1
  1668  0241  00F7               	movwf	??___lwdiv
  1669  0242  0877               	movf	??___lwdiv,w
  1670  0243  07A8               	addwf	___lwdiv@counter,f
  1671  0244                     l1706:
  1672  0244  1FA5               	btfss	___lwdiv@divisor+1,7
  1673  0245  2A47               	goto	u1081
  1674  0246  2A48               	goto	u1080
  1675  0247                     u1081:
  1676  0247  2A39               	goto	l1702
  1677  0248                     u1080:
  1678  0248                     l1708:
  1679  0248  3001               	movlw	1
  1680  0249                     u1095:
  1681  0249  1003               	clrc
  1682  024A  0DA9               	rlf	___lwdiv@quotient,f
  1683  024B  0DAA               	rlf	___lwdiv@quotient+1,f
  1684  024C  3EFF               	addlw	-1
  1685  024D  1D03               	skipz
  1686  024E  2A49               	goto	u1095
  1687  024F  0825               	movf	___lwdiv@divisor+1,w
  1688  0250  0227               	subwf	___lwdiv@dividend+1,w
  1689  0251  1D03               	skipz
  1690  0252  2A55               	goto	u1105
  1691  0253  0824               	movf	___lwdiv@divisor,w
  1692  0254  0226               	subwf	___lwdiv@dividend,w
  1693  0255                     u1105:
  1694  0255  1C03               	skipc
  1695  0256  2A58               	goto	u1101
  1696  0257  2A59               	goto	u1100
  1697  0258                     u1101:
  1698  0258  2A60               	goto	l1714
  1699  0259                     u1100:
  1700  0259                     l1710:
  1701  0259  0824               	movf	___lwdiv@divisor,w
  1702  025A  02A6               	subwf	___lwdiv@dividend,f
  1703  025B  0825               	movf	___lwdiv@divisor+1,w
  1704  025C  1C03               	skipc
  1705  025D  03A7               	decf	___lwdiv@dividend+1,f
  1706  025E  02A7               	subwf	___lwdiv@dividend+1,f
  1707  025F                     l1712:
  1708  025F  1429               	bsf	___lwdiv@quotient,0
  1709  0260                     l1714:
  1710  0260  3001               	movlw	1
  1711  0261                     u1115:
  1712  0261  1003               	clrc
  1713  0262  0CA5               	rrf	___lwdiv@divisor+1,f
  1714  0263  0CA4               	rrf	___lwdiv@divisor,f
  1715  0264  3EFF               	addlw	-1
  1716  0265  1D03               	skipz
  1717  0266  2A61               	goto	u1115
  1718  0267                     l1716:
  1719  0267  3001               	movlw	1
  1720  0268  02A8               	subwf	___lwdiv@counter,f
  1721  0269  1D03               	btfss	3,2
  1722  026A  2A6C               	goto	u1121
  1723  026B  2A6D               	goto	u1120
  1724  026C                     u1121:
  1725  026C  2A48               	goto	l1708
  1726  026D                     u1120:
  1727  026D                     l1718:
  1728  026D  082A               	movf	___lwdiv@quotient+1,w
  1729  026E  00A5               	movwf	?___lwdiv+1
  1730  026F  0829               	movf	___lwdiv@quotient,w
  1731  0270  00A4               	movwf	?___lwdiv
  1732  0271                     l498:
  1733  0271  0008               	return
  1734  0272                     __end_of___lwdiv:
  1735                           
  1736                           	psect	text12
  1737  01D1                     __ptext12:	
  1738 ;; *************** function ___awmod *****************
  1739 ;; Defined at:
  1740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  divisor         2    0[BANK0 ] int 
  1743 ;;  dividend        2    2[BANK0 ] int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  sign            1    7[COMMON] unsigned char 
  1746 ;;  counter         1    6[COMMON] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2    0[BANK0 ] int 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       4       0       0       0
  1757 ;;      Locals:         2       0       0       0       0
  1758 ;;      Temps:          1       0       0       0       0
  1759 ;;      Totals:         3       4       0       0       0
  1760 ;;Total ram usage:        7 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; Hardware stack levels required when called: 1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_divizion_m
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function ___awmod
  1772  01D1                     ___awmod:
  1773  01D1                     l1658:	
  1774                           ;incstack = 0
  1775                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1776                           
  1777  01D1  01F7               	clrf	___awmod@sign
  1778  01D2                     l1660:
  1779  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1780  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1781  01D4  1FA3               	btfss	___awmod@dividend+1,7
  1782  01D5  29D7               	goto	u971
  1783  01D6  29D8               	goto	u970
  1784  01D7                     u971:
  1785  01D7  29DF               	goto	l1666
  1786  01D8                     u970:
  1787  01D8                     l1662:
  1788  01D8  09A2               	comf	___awmod@dividend,f
  1789  01D9  09A3               	comf	___awmod@dividend+1,f
  1790  01DA  0AA2               	incf	___awmod@dividend,f
  1791  01DB  1903               	skipnz
  1792  01DC  0AA3               	incf	___awmod@dividend+1,f
  1793  01DD                     l1664:
  1794  01DD  01F7               	clrf	___awmod@sign
  1795  01DE  0AF7               	incf	___awmod@sign,f
  1796  01DF                     l1666:
  1797  01DF  1FA1               	btfss	___awmod@divisor+1,7
  1798  01E0  29E2               	goto	u981
  1799  01E1  29E3               	goto	u980
  1800  01E2                     u981:
  1801  01E2  29E8               	goto	l1670
  1802  01E3                     u980:
  1803  01E3                     l1668:
  1804  01E3  09A0               	comf	___awmod@divisor,f
  1805  01E4  09A1               	comf	___awmod@divisor+1,f
  1806  01E5  0AA0               	incf	___awmod@divisor,f
  1807  01E6  1903               	skipnz
  1808  01E7  0AA1               	incf	___awmod@divisor+1,f
  1809  01E8                     l1670:
  1810  01E8  0820               	movf	___awmod@divisor,w
  1811  01E9  0421               	iorwf	___awmod@divisor+1,w
  1812  01EA  1903               	btfsc	3,2
  1813  01EB  29ED               	goto	u991
  1814  01EC  29EE               	goto	u990
  1815  01ED                     u991:
  1816  01ED  2A1D               	goto	l1688
  1817  01EE                     u990:
  1818  01EE                     l1672:
  1819  01EE  01F6               	clrf	___awmod@counter
  1820  01EF  0AF6               	incf	___awmod@counter,f
  1821  01F0  29FC               	goto	l1678
  1822  01F1                     l1674:
  1823  01F1  3001               	movlw	1
  1824  01F2                     u1005:
  1825  01F2  1003               	clrc
  1826  01F3  0DA0               	rlf	___awmod@divisor,f
  1827  01F4  0DA1               	rlf	___awmod@divisor+1,f
  1828  01F5  3EFF               	addlw	-1
  1829  01F6  1D03               	skipz
  1830  01F7  29F2               	goto	u1005
  1831  01F8                     l1676:
  1832  01F8  3001               	movlw	1
  1833  01F9  00F5               	movwf	??___awmod
  1834  01FA  0875               	movf	??___awmod,w
  1835  01FB  07F6               	addwf	___awmod@counter,f
  1836  01FC                     l1678:
  1837  01FC  1FA1               	btfss	___awmod@divisor+1,7
  1838  01FD  29FF               	goto	u1011
  1839  01FE  2A00               	goto	u1010
  1840  01FF                     u1011:
  1841  01FF  29F1               	goto	l1674
  1842  0200                     u1010:
  1843  0200                     l1680:
  1844  0200  0821               	movf	___awmod@divisor+1,w
  1845  0201  0223               	subwf	___awmod@dividend+1,w
  1846  0202  1D03               	skipz
  1847  0203  2A06               	goto	u1025
  1848  0204  0820               	movf	___awmod@divisor,w
  1849  0205  0222               	subwf	___awmod@dividend,w
  1850  0206                     u1025:
  1851  0206  1C03               	skipc
  1852  0207  2A09               	goto	u1021
  1853  0208  2A0A               	goto	u1020
  1854  0209                     u1021:
  1855  0209  2A10               	goto	l1684
  1856  020A                     u1020:
  1857  020A                     l1682:
  1858  020A  0820               	movf	___awmod@divisor,w
  1859  020B  02A2               	subwf	___awmod@dividend,f
  1860  020C  0821               	movf	___awmod@divisor+1,w
  1861  020D  1C03               	skipc
  1862  020E  03A3               	decf	___awmod@dividend+1,f
  1863  020F  02A3               	subwf	___awmod@dividend+1,f
  1864  0210                     l1684:
  1865  0210  3001               	movlw	1
  1866  0211                     u1035:
  1867  0211  1003               	clrc
  1868  0212  0CA1               	rrf	___awmod@divisor+1,f
  1869  0213  0CA0               	rrf	___awmod@divisor,f
  1870  0214  3EFF               	addlw	-1
  1871  0215  1D03               	skipz
  1872  0216  2A11               	goto	u1035
  1873  0217                     l1686:
  1874  0217  3001               	movlw	1
  1875  0218  02F6               	subwf	___awmod@counter,f
  1876  0219  1D03               	btfss	3,2
  1877  021A  2A1C               	goto	u1041
  1878  021B  2A1D               	goto	u1040
  1879  021C                     u1041:
  1880  021C  2A00               	goto	l1680
  1881  021D                     u1040:
  1882  021D                     l1688:
  1883  021D  0877               	movf	___awmod@sign,w
  1884  021E  1903               	btfsc	3,2
  1885  021F  2A21               	goto	u1051
  1886  0220  2A22               	goto	u1050
  1887  0221                     u1051:
  1888  0221  2A27               	goto	l1692
  1889  0222                     u1050:
  1890  0222                     l1690:
  1891  0222  09A2               	comf	___awmod@dividend,f
  1892  0223  09A3               	comf	___awmod@dividend+1,f
  1893  0224  0AA2               	incf	___awmod@dividend,f
  1894  0225  1903               	skipnz
  1895  0226  0AA3               	incf	___awmod@dividend+1,f
  1896  0227                     l1692:
  1897  0227  0823               	movf	___awmod@dividend+1,w
  1898  0228  00A1               	movwf	?___awmod+1
  1899  0229  0822               	movf	___awmod@dividend,w
  1900  022A  00A0               	movwf	?___awmod
  1901  022B                     l392:
  1902  022B  0008               	return
  1903  022C                     __end_of___awmod:
  1904                           
  1905                           	psect	text13
  1906  0105                     __ptext13:	
  1907 ;; *************** function ___awdiv *****************
  1908 ;; Defined at:
  1909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  divisor         2    0[BANK0 ] int 
  1912 ;;  dividend        2    2[BANK0 ] int 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  quotient        2    6[BANK0 ] int 
  1915 ;;  sign            1    5[BANK0 ] unsigned char 
  1916 ;;  counter         1    4[BANK0 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2    0[BANK0 ] int 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       4       0       0       0
  1927 ;;      Locals:         0       4       0       0       0
  1928 ;;      Temps:          1       0       0       0       0
  1929 ;;      Totals:         1       8       0       0       0
  1930 ;;Total ram usage:        9 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_divizion_m
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function ___awdiv
  1942  0105                     ___awdiv:
  1943  0105                     l1614:	
  1944                           ;incstack = 0
  1945                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1946                           
  1947  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0107  01A5               	clrf	___awdiv@sign
  1950  0108                     l1616:
  1951  0108  1FA1               	btfss	___awdiv@divisor+1,7
  1952  0109  290B               	goto	u871
  1953  010A  290C               	goto	u870
  1954  010B                     u871:
  1955  010B  2913               	goto	l1622
  1956  010C                     u870:
  1957  010C                     l1618:
  1958  010C  09A0               	comf	___awdiv@divisor,f
  1959  010D  09A1               	comf	___awdiv@divisor+1,f
  1960  010E  0AA0               	incf	___awdiv@divisor,f
  1961  010F  1903               	skipnz
  1962  0110  0AA1               	incf	___awdiv@divisor+1,f
  1963  0111                     l1620:
  1964  0111  01A5               	clrf	___awdiv@sign
  1965  0112  0AA5               	incf	___awdiv@sign,f
  1966  0113                     l1622:
  1967  0113  1FA3               	btfss	___awdiv@dividend+1,7
  1968  0114  2916               	goto	u881
  1969  0115  2917               	goto	u880
  1970  0116                     u881:
  1971  0116  2920               	goto	l1628
  1972  0117                     u880:
  1973  0117                     l1624:
  1974  0117  09A2               	comf	___awdiv@dividend,f
  1975  0118  09A3               	comf	___awdiv@dividend+1,f
  1976  0119  0AA2               	incf	___awdiv@dividend,f
  1977  011A  1903               	skipnz
  1978  011B  0AA3               	incf	___awdiv@dividend+1,f
  1979  011C                     l1626:
  1980  011C  3001               	movlw	1
  1981  011D  00F5               	movwf	??___awdiv
  1982  011E  0875               	movf	??___awdiv,w
  1983  011F  06A5               	xorwf	___awdiv@sign,f
  1984  0120                     l1628:
  1985  0120  01A6               	clrf	___awdiv@quotient
  1986  0121  01A7               	clrf	___awdiv@quotient+1
  1987  0122                     l1630:
  1988  0122  0820               	movf	___awdiv@divisor,w
  1989  0123  0421               	iorwf	___awdiv@divisor+1,w
  1990  0124  1903               	btfsc	3,2
  1991  0125  2927               	goto	u891
  1992  0126  2928               	goto	u890
  1993  0127                     u891:
  1994  0127  295F               	goto	l1650
  1995  0128                     u890:
  1996  0128                     l1632:
  1997  0128  01A4               	clrf	___awdiv@counter
  1998  0129  0AA4               	incf	___awdiv@counter,f
  1999  012A  2936               	goto	l1638
  2000  012B                     l1634:
  2001  012B  3001               	movlw	1
  2002  012C                     u905:
  2003  012C  1003               	clrc
  2004  012D  0DA0               	rlf	___awdiv@divisor,f
  2005  012E  0DA1               	rlf	___awdiv@divisor+1,f
  2006  012F  3EFF               	addlw	-1
  2007  0130  1D03               	skipz
  2008  0131  292C               	goto	u905
  2009  0132                     l1636:
  2010  0132  3001               	movlw	1
  2011  0133  00F5               	movwf	??___awdiv
  2012  0134  0875               	movf	??___awdiv,w
  2013  0135  07A4               	addwf	___awdiv@counter,f
  2014  0136                     l1638:
  2015  0136  1FA1               	btfss	___awdiv@divisor+1,7
  2016  0137  2939               	goto	u911
  2017  0138  293A               	goto	u910
  2018  0139                     u911:
  2019  0139  292B               	goto	l1634
  2020  013A                     u910:
  2021  013A                     l1640:
  2022  013A  3001               	movlw	1
  2023  013B                     u925:
  2024  013B  1003               	clrc
  2025  013C  0DA6               	rlf	___awdiv@quotient,f
  2026  013D  0DA7               	rlf	___awdiv@quotient+1,f
  2027  013E  3EFF               	addlw	-1
  2028  013F  1D03               	skipz
  2029  0140  293B               	goto	u925
  2030  0141  0821               	movf	___awdiv@divisor+1,w
  2031  0142  0223               	subwf	___awdiv@dividend+1,w
  2032  0143  1D03               	skipz
  2033  0144  2947               	goto	u935
  2034  0145  0820               	movf	___awdiv@divisor,w
  2035  0146  0222               	subwf	___awdiv@dividend,w
  2036  0147                     u935:
  2037  0147  1C03               	skipc
  2038  0148  294A               	goto	u931
  2039  0149  294B               	goto	u930
  2040  014A                     u931:
  2041  014A  2952               	goto	l1646
  2042  014B                     u930:
  2043  014B                     l1642:
  2044  014B  0820               	movf	___awdiv@divisor,w
  2045  014C  02A2               	subwf	___awdiv@dividend,f
  2046  014D  0821               	movf	___awdiv@divisor+1,w
  2047  014E  1C03               	skipc
  2048  014F  03A3               	decf	___awdiv@dividend+1,f
  2049  0150  02A3               	subwf	___awdiv@dividend+1,f
  2050  0151                     l1644:
  2051  0151  1426               	bsf	___awdiv@quotient,0
  2052  0152                     l1646:
  2053  0152  3001               	movlw	1
  2054  0153                     u945:
  2055  0153  1003               	clrc
  2056  0154  0CA1               	rrf	___awdiv@divisor+1,f
  2057  0155  0CA0               	rrf	___awdiv@divisor,f
  2058  0156  3EFF               	addlw	-1
  2059  0157  1D03               	skipz
  2060  0158  2953               	goto	u945
  2061  0159                     l1648:
  2062  0159  3001               	movlw	1
  2063  015A  02A4               	subwf	___awdiv@counter,f
  2064  015B  1D03               	btfss	3,2
  2065  015C  295E               	goto	u951
  2066  015D  295F               	goto	u950
  2067  015E                     u951:
  2068  015E  293A               	goto	l1640
  2069  015F                     u950:
  2070  015F                     l1650:
  2071  015F  0825               	movf	___awdiv@sign,w
  2072  0160  1903               	btfsc	3,2
  2073  0161  2963               	goto	u961
  2074  0162  2964               	goto	u960
  2075  0163                     u961:
  2076  0163  2969               	goto	l1654
  2077  0164                     u960:
  2078  0164                     l1652:
  2079  0164  09A6               	comf	___awdiv@quotient,f
  2080  0165  09A7               	comf	___awdiv@quotient+1,f
  2081  0166  0AA6               	incf	___awdiv@quotient,f
  2082  0167  1903               	skipnz
  2083  0168  0AA7               	incf	___awdiv@quotient+1,f
  2084  0169                     l1654:
  2085  0169  0827               	movf	___awdiv@quotient+1,w
  2086  016A  00A1               	movwf	?___awdiv+1
  2087  016B  0826               	movf	___awdiv@quotient,w
  2088  016C  00A0               	movwf	?___awdiv
  2089  016D                     l379:
  2090  016D  0008               	return
  2091  016E                     __end_of___awdiv:
  2092                           
  2093                           	psect	text14
  2094  016E                     __ptext14:	
  2095 ;; *************** function _isr *****************
  2096 ;; Defined at:
  2097 ;;		line 134 in file "post_DAC.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          5       0       0       0       0
  2114 ;;      Totals:         5       0       0       0       0
  2115 ;;Total ram usage:        5 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		Interrupt level 1
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _isr
  2126  016E                     _isr:
  2127  016E                     i1l1490:
  2128                           
  2129                           ;post_DAC.c: 135:         }
  2130  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2131  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0170  1F0C               	btfss	12,6	;volatile
  2133  0171  2973               	goto	u79_21
  2134  0172  2974               	goto	u79_20
  2135  0173                     u79_21:
  2136  0173  2992               	goto	i1l94
  2137  0174                     u79_20:
  2138  0174                     i1l1492:
  2139                           
  2140                           ;post_DAC.c: 136:     }
  2141  0174  0C1F               	rrf	31,w	;volatile
  2142  0175  00F0               	movwf	??_isr
  2143  0176  0C70               	rrf	??_isr,w
  2144  0177  390F               	andlw	15
  2145  0178  3A06               	xorlw	6
  2146  0179  1D03               	skipz
  2147  017A  297C               	goto	u80_21
  2148  017B  297D               	goto	u80_20
  2149  017C                     u80_21:
  2150  017C  2985               	goto	i1l1496
  2151  017D                     u80_20:
  2152  017D                     i1l1494:
  2153                           
  2154                           ;post_DAC.c: 138: }
  2155  017D  081E               	movf	30,w	;volatile
  2156  017E  00F0               	movwf	??_isr
  2157  017F  01F1               	clrf	??_isr+1
  2158  0180  0870               	movf	??_isr,w
  2159  0181  00B3               	movwf	_voltaje
  2160  0182  0871               	movf	??_isr+1,w
  2161  0183  00B4               	movwf	_voltaje+1
  2162                           
  2163                           ;post_DAC.c: 139: 
  2164  0184  2990               	goto	i1l1500
  2165  0185                     i1l1496:
  2166  0185  0C1F               	rrf	31,w	;volatile
  2167  0186  00F0               	movwf	??_isr
  2168  0187  0C70               	rrf	??_isr,w
  2169  0188  390F               	andlw	15
  2170  0189  3A05               	xorlw	5
  2171  018A  1D03               	skipz
  2172  018B  298D               	goto	u81_21
  2173  018C  298E               	goto	u81_20
  2174  018D                     u81_21:
  2175  018D  2990               	goto	i1l1500
  2176  018E                     u81_20:
  2177  018E                     i1l1498:
  2178                           
  2179                           ;post_DAC.c: 141: 
  2180  018E  081E               	movf	30,w	;volatile
  2181  018F  0085               	movwf	5	;volatile
  2182  0190                     i1l1500:
  2183                           
  2184                           ;post_DAC.c: 143: 
  2185  0190  130C               	bcf	12,6	;volatile
  2186                           
  2187                           ;post_DAC.c: 144: 
  2188  0191  29C8               	goto	i1l106
  2189  0192                     i1l94:	
  2190                           ;post_DAC.c: 146: void config_io(void){
  2191                           
  2192  0192  1D0B               	btfss	11,2	;volatile
  2193  0193  2995               	goto	u82_21
  2194  0194  2996               	goto	u82_20
  2195  0195                     u82_21:
  2196  0195  29C8               	goto	i1l106
  2197  0196                     u82_20:
  2198  0196                     i1l1502:
  2199                           
  2200                           ;post_DAC.c: 147:     ANSEL = 0b01100000;
  2201  0196  110B               	bcf	11,2	;volatile
  2202  0197                     i1l1504:
  2203                           
  2204                           ;post_DAC.c: 148:     ANSELH = 0;
  2205  0197  0188               	clrf	8	;volatile
  2206                           
  2207                           ;post_DAC.c: 149: 
  2208  0198  29B5               	goto	i1l1522
  2209  0199                     i1l101:	
  2210                           ;post_DAC.c: 150:     TRISA = 0;
  2211                           
  2212                           
  2213                           ;post_DAC.c: 151:     TRISC = 0;
  2214  0199  01F8               	clrf	_transistor
  2215  019A  0AF8               	incf	_transistor,f
  2216  019B                     i1l1506:
  2217                           
  2218                           ;post_DAC.c: 152:     TRISD = 0b000;
  2219  019B  0838               	movf	_display2,w
  2220  019C  0087               	movwf	7	;volatile
  2221                           
  2222                           ;post_DAC.c: 153:     TRISE = 0b11;
  2223  019D  3083               	movlw	131
  2224  019E  0081               	movwf	1	;volatile
  2225                           
  2226                           ;post_DAC.c: 154: 
  2227  019F  3001               	movlw	1
  2228  01A0  0088               	movwf	8	;volatile
  2229                           
  2230                           ;post_DAC.c: 155:     PORTA = 0;
  2231  01A1  29C8               	goto	i1l106
  2232  01A2                     i1l1508:
  2233                           
  2234                           ;post_DAC.c: 157:     PORTD = 0b000;
  2235  01A2  3002               	movlw	2
  2236  01A3  00F0               	movwf	??_isr
  2237  01A4  0870               	movf	??_isr,w
  2238  01A5  00F8               	movwf	_transistor
  2239                           
  2240                           ;post_DAC.c: 158:     PORTE = 0;
  2241  01A6  0837               	movf	_display1,w
  2242  01A7  0087               	movwf	7	;volatile
  2243                           
  2244                           ;post_DAC.c: 159:     return;
  2245  01A8  3083               	movlw	131
  2246  01A9  0081               	movwf	1	;volatile
  2247                           
  2248                           ;post_DAC.c: 160: }
  2249  01AA  3002               	movlw	2
  2250  01AB  0088               	movwf	8	;volatile
  2251                           
  2252                           ;post_DAC.c: 161: 
  2253  01AC  29C8               	goto	i1l106
  2254  01AD                     i1l1510:
  2255                           
  2256                           ;post_DAC.c: 163:     OSCCONbits.IRCF = 0b110;
  2257  01AD  01F8               	clrf	_transistor
  2258  01AE                     i1l1512:
  2259                           
  2260                           ;post_DAC.c: 164:     OSCCONbits.SCS = 1;
  2261  01AE  0836               	movf	_display0,w
  2262  01AF  0087               	movwf	7	;volatile
  2263  01B0                     i1l1514:
  2264                           
  2265                           ;post_DAC.c: 165:     return;
  2266  01B0  3083               	movlw	131
  2267  01B1  0081               	movwf	1	;volatile
  2268  01B2                     i1l1516:
  2269                           
  2270                           ;post_DAC.c: 166: }
  2271  01B2  3004               	movlw	4
  2272  01B3  0088               	movwf	8	;volatile
  2273                           
  2274                           ;post_DAC.c: 167: 
  2275  01B4  29C8               	goto	i1l106
  2276  01B5                     i1l1522:
  2277  01B5  0878               	movf	_transistor,w
  2278  01B6  00F0               	movwf	??_isr
  2279  01B7  01F1               	clrf	??_isr+1
  2280                           
  2281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2282                           ; Switch size 1, requested type "simple"
  2283                           ; Number of cases is 1, Range of values is 0 to 0
  2284                           ; switch strategies available:
  2285                           ; Name         Instructions Cycles
  2286                           ; simple_byte            4     3 (average)
  2287                           ; direct_byte           11     8 (fixed)
  2288                           ; jumptable            260     6 (fixed)
  2289                           ;	Chosen strategy is simple_byte
  2290  01B8  0871               	movf	??_isr+1,w
  2291  01B9  3A00               	xorlw	0	; case 0
  2292  01BA  1903               	skipnz
  2293  01BB  29BD               	goto	i1l1864
  2294  01BC  2999               	goto	i1l101
  2295  01BD                     i1l1864:
  2296                           
  2297                           ; Switch size 1, requested type "simple"
  2298                           ; Number of cases is 3, Range of values is 0 to 2
  2299                           ; switch strategies available:
  2300                           ; Name         Instructions Cycles
  2301                           ; simple_byte           10     6 (average)
  2302                           ; direct_byte           17     8 (fixed)
  2303                           ; jumptable            260     6 (fixed)
  2304                           ;	Chosen strategy is simple_byte
  2305  01BD  0870               	movf	??_isr,w
  2306  01BE  3A00               	xorlw	0	; case 0
  2307  01BF  1903               	skipnz
  2308  01C0  2999               	goto	i1l101
  2309  01C1  3A01               	xorlw	1	; case 1
  2310  01C2  1903               	skipnz
  2311  01C3  29A2               	goto	i1l1508
  2312  01C4  3A03               	xorlw	3	; case 2
  2313  01C5  1903               	skipnz
  2314  01C6  29AD               	goto	i1l1510
  2315  01C7  2999               	goto	i1l101
  2316  01C8                     i1l106:
  2317  01C8  0874               	movf	??_isr+4,w
  2318  01C9  008A               	movwf	10
  2319  01CA  0873               	movf	??_isr+3,w
  2320  01CB  0084               	movwf	4
  2321  01CC  0E72               	swapf	??_isr+2,w
  2322  01CD  0083               	movwf	3
  2323  01CE  0EFE               	swapf	btemp,f
  2324  01CF  0E7E               	swapf	btemp,w
  2325  01D0  0009               	retfie
  2326  01D1                     __end_of_isr:
  2327  007E                     btemp	set	126	;btemp
  2328  007E                     wtemp0	set	126
  2329                           
  2330                           	psect	intentry
  2331  0004                     __pintentry:	
  2332                           ;incstack = 0
  2333                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  2334                           
  2335  0004                     interrupt_function:
  2336  007E                     saved_w	set	btemp
  2337  0004  00FE               	movwf	btemp
  2338  0005  0E03               	swapf	3,w
  2339  0006  00F2               	movwf	??_isr+2
  2340  0007  0804               	movf	4,w
  2341  0008  00F3               	movwf	??_isr+3
  2342  0009  080A               	movf	10,w
  2343  000A  00F4               	movwf	??_isr+4
  2344  000B  120A  118A  296E   	ljmp	_isr
  2345                           
  2346                           	psect	config
  2347                           
  2348                           ;Config register CONFIG1 @ 0x2007
  2349                           ;	Oscillator Selection bits
  2350                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2351                           ;	Watchdog Timer Enable bit
  2352                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2353                           ;	Power-up Timer Enable bit
  2354                           ;	PWRTE = OFF, PWRT disabled
  2355                           ;	RE3/MCLR pin function select bit
  2356                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2357                           ;	Code Protection bit
  2358                           ;	CP = OFF, Program memory code protection is disabled
  2359                           ;	Data Code Protection bit
  2360                           ;	CPD = OFF, Data memory code protection is disabled
  2361                           ;	Brown Out Reset Selection bits
  2362                           ;	BOREN = OFF, BOR disabled
  2363                           ;	Internal External Switchover bit
  2364                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2365                           ;	Fail-Safe Clock Monitor Enabled bit
  2366                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2367                           ;	Low Voltage Programming Enable bit
  2368                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2369                           ;	In-Circuit Debugger Mode bit
  2370                           ;	DEBUG = 0x1, unprogrammed default
  2371  2007                     	org	8199
  2372  2007  20D4               	dw	8404
  2373                           
  2374                           ;Config register CONFIG2 @ 0x2008
  2375                           ;	Brown-out Reset Selection bit
  2376                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2377                           ;	Flash Program Memory Self Write Enable bits
  2378                           ;	WRT = OFF, Write protection off
  2379  2008                     	org	8200
  2380  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     19      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tabla_7seg
    _setup->_config_ADC
    _divizion_m->___awmod
    _divizion_m->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divizion_m
    _divizion_m->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2843
                                             17 BANK0      2     2      0
                         _divizion_m
                              _setup
                         _tabla_7seg
 ---------------------------------------------------------------------------------
 (1) _tabla_7seg                                           3     3      0      22
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _config_ADC
                       _config_clock
                          _config_ie
                          _config_io
                        _config_tmr0
 ---------------------------------------------------------------------------------
 (2) _config_tmr0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ie                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divizion_m                                           8     6      2    2821
                                             11 BANK0      6     4      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              7 COMMON     1     1      0
                                              4 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              5 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divizion_m
     ___awdiv
     ___awmod
     ___lwdiv
       ___wmul (ARG)
     ___lwmod
     ___wmul
   _setup
     _config_ADC
     _config_clock
     _config_ie
     _config_io
     _config_tmr0
   _tabla_7seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 11:05:11 2021

                     l75 032D                       l84 00D5             ___awdiv@sign 0025  
    ___wmul@multiplicand 0022                      l112 0375                      l121 0362  
                    l115 036D                      l124 0093                      l109 0354  
                    l118 0341                      l129 02B0                      l226 02FB  
                    l228 0313                      l508 02EC                      l392 022B  
                    l379 016D                      l498 0271                      u910 013A  
                    u830 02F5                      u911 0139                      u831 02F4  
                    u905 012C                      u930 014B                      u931 014A  
                    u860 030F                      u925 013B                      u861 030E  
                    u845 02FC                      u950 015F                      u870 010C  
                    u951 015E                      u935 0147                      u871 010B  
                    u855 0303                      u960 0164                      u880 0117  
                    u961 0163                      u945 0153                      u881 0116  
                    u890 0128                      u970 01D8                      u891 0127  
                    u971 01D7                      u980 01E3                      u981 01E2  
                    u990 01EE                      u991 01ED                      _dec 003A  
                    _cen 003B                      _isr 016E                      fsr0 0004  
                    _uni 0039             ___awmod@sign 0077                     l1200 0338  
                   l1202 033C                     l1210 035E                     l1206 0355  
                   l1208 035A                     l1170 0347                     l1410 0280  
                   l1180 0352                     l1172 034A                     l1404 027E  
                   l1182 0353                     l1174 034B                     l1166 0342  
                   l1422 0284                     l1600 02ED                     l1192 0363  
                   l1176 034E                     l1168 0346                     l1360 031E  
                   l1416 0282                     l1610 030F                     l1602 02EF  
                   l1194 032E                     l1186 036E                     l1178 0351  
                   l1362 0323                     l1442 0288                     l1620 0111  
                   l1700 0236                     l1604 02F5                     l1196 0331  
                   l1188 0374                     l1364 0328                     l1428 0286  
                   l1380 0276                     l1372 0273                     l1630 0122  
                   l1622 0113                     l1614 0105                     l1710 0259  
                   l1702 0239                     l1606 0302                     l1198 0337  
                   l1358 0314                     l1374 0274                     l1640 013A  
                   l1632 0128                     l1624 0117                     l1616 0108  
                   l1712 025F                     l1704 0240                     l1608 0309  
                   l1392 027A                     l1642 014B                     l1634 012B  
                   l1650 015F                     l1626 011C                     l1618 010C  
                   l1714 0260                     l1706 0244                     l1730 02C7  
                   l1722 02B1                     l1386 0278                     l1652 0164  
                   l1644 0151                     l1636 0132                     l1628 0120  
                   l1660 01D2                     l1716 0267                     l1708 0248  
                   l1732 02CB                     l1724 02B9                     l1740 02E8  
                   l1654 0169                     l1646 0152                     l1638 0136  
                   l1670 01E8                     l1662 01D8                     l1718 026D  
                   l1734 02D5                     l1726 02BC                     l1398 027C  
                   l1750 0099                     l1648 0159                     l1680 0200  
                   l1672 01EE                     l1664 01DD                     l1736 02DB  
                   l1728 02C3                     l1744 0021                     l1760 00AC  
                   l1752 009C                     l1690 0222                     l1682 020A  
                   l1674 01F1                     l1666 01DF                     l1658 01D1  
                   l1738 02E2                     l1762 00B1                     l1692 0227  
                   l1684 0210                     l1676 01F8                     l1668 01E3  
                   l1780 00E0                     l1860 00CD                     l1764 00B5  
                   l1756 00A1                     l1748 0094                     l1686 0217  
                   l1678 01FC                     l1862 0290                     l1782 00EB  
                   l1766 00BC                     l1758 00A5                     l1688 021D  
                   l1696 022C                     l1784 00F6                     l1768 00C0  
                   l1776 00C5                     l1698 0230                     l1778 00D7  
                   ?_isr 0070                     u1010 0200                     u1011 01FF  
                   u1020 020A                     u1100 0259                     u1021 0209  
                   u1005 01F2                     u1101 0258                     u1040 021D  
                   u1120 026D                     u1041 021C                     u1025 0206  
                   u1121 026C                     u1105 0255                     u1050 0222  
                   u1130 02B9                     u1051 0221                     u1035 0211  
                   u1115 0261                     u1131 02B8                     u1060 0236  
                   u1061 0235                     u1150 02CB                     u1151 02CA  
                   u1207 00A9                     u1080 0248                     u1160 02D5  
                   u1081 0247                     u1161 02D4                     u1145 02BD  
                   u1217 00B9                     u1075 023A                     u1227 033E  
                   u1180 02E8                     u1181 02E7                     u1165 02D1  
                   u1190 00A0                     u1095 0249                     u1175 02DC  
                   u1191 009F                     i1l94 0192                     _TMR0 0001  
                   _main 0094                     _pepa 0035                     btemp 007E  
         ??_config_clock 0075                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 016E          __end_of___awmod 022C  
                  _ANSEL 0188          ___awdiv@divisor 0020          __end_of___lwdiv 0272  
                  i1l101 0199                    i1l106 01C8          __end_of___lwmod 02ED  
        ___awdiv@counter 0024                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u80_20 017D  
                  u80_21 017C                    u81_20 018E                    u81_21 018D  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    u82_20 0196                    u82_21 0195  
                  u79_20 0174                    u79_21 0173                    _setup 0314  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0105                   ??_main 0031  
                 _ADCON1 009F                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1500 0190  
                 i1l1510 01AD                   i1l1502 0196                   i1l1512 01AE  
                 i1l1504 0197                   i1l1514 01B0                   i1l1506 019B  
                 i1l1522 01B5                   i1l1516 01B2                   i1l1508 01A2  
                 i1l1490 016E                   i1l1492 0174                   i1l1494 017D  
                 i1l1496 0185                   i1l1498 018E                   i1l1864 01BD  
                 ___wmul 02ED                ??___awdiv 0075                ??___awmod 0075  
   __size_of_config_tmr0 000E                ??___lwdiv 0077                ??___lwmod 0075  
       ___awdiv@quotient 0026          ___awmod@divisor 0020          ___awmod@counter 0076  
   __end_of_config_clock 0376                   saved_w 007E  __end_of__initialization 001D  
         __pcstackCOMMON 0070            __end_of_setup 032E           _OPTION_REGbits 0081  
     __size_of_config_ie 000B       __size_of_config_io 0013                  ??_setup 0076  
             __pbssBANK0 0033               __pmaintext 0094                  ?___wmul 0020  
             __pintentry 0004            divizion_m@kak 002B               _config_ADC 032E  
             _divizion_m 0021        __end_of_config_ie 036E        __end_of_config_io 0355  
                ___awdiv 0105                  ___awmod 01D1          __size_of___wmul 0027  
                ___lwdiv 022C                  ___lwmod 02B1    __size_of_config_clock 0008  
                __ptext1 0272                  __ptext2 0314                  __ptext3 0355  
                __ptext4 0342                  __ptext5 0363                  __ptext6 036E  
                __ptext7 032E                  __ptext8 0021                  __ptext9 02ED  
             _tabla_7seg 0272             __size_of_isr 0063         ___awmod@dividend 0022  
                _voltaje 0033     end_of_initialization 001D             _config_clock 036E  
            ?_config_ADC 0070               _transistor 0078              ?_divizion_m 002B  
          ??_config_tmr0 0075           __end_of___wmul 0314              ?_tabla_7seg 0070  
    start_initialization 0011              __end_of_isr 01D1      __size_of_config_ADC 0014  
               ??___wmul 0075      __end_of_config_tmr0 0363      __size_of_divizion_m 0073  
  divizion_m@redivisor_m 0030              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020      __size_of_tabla_7seg 003F         ___lwdiv@dividend 0026  
               ?___awdiv 0020                 ?___awmod 0020                 ?___lwdiv 0024  
               ?___lwmod 0020                _config_ie 0363                _config_io 0342  
       ___lwdiv@quotient 0029           __size_of_setup 001A        interrupt_function 0004  
         ___wmul@product 0075                 _PIE1bits 008C                 _PIR1bits 000C  
            _config_tmr0 0355               ?_config_ie 0070               ?_config_io 0070  
             _ADCON0bits 001F        ___wmul@multiplier 0020             ??_config_ADC 0075  
           ??_divizion_m 002D       __end_of_config_ADC 0342         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of___lwdiv 0046         __size_of___lwmod 003C  
           ??_tabla_7seg 0075       __end_of_divizion_m 0094          ___lwdiv@divisor 0024  
        ___lwdiv@counter 0028                 __ptext10 02B1                 __ptext11 022C  
               __ptext12 01D1                 __ptext13 0105                 __ptext14 016E  
               _display0 0036                 _display1 0037                 _display2 0038  
          __size_of_main 0071       __end_of_tabla_7seg 02B1              ??_config_ie 0075  
            ??_config_io 0075               _INTCONbits 000B                 intlevel1 0000  
       ___lwmod@dividend 0022               _OSCCONbits 008F          ___lwmod@divisor 0020  
        ___lwmod@counter 0076            tabla_7seg@uwu 0077            ?_config_clock 0070  
           ?_config_tmr0 0070  
